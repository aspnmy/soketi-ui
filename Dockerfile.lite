# LiteSQL 专用 Dockerfile
# 此文件针对SQLite数据库进行了优化，移除了不必要的依赖以减小容器大小

# ===== 构建阶段1：Composer依赖安装 =====
FROM composer:latest AS composer

WORKDIR /src

# 复制composer配置文件
COPY composer.lite.json ./composer.json

# 安装依赖（不包括开发依赖）
RUN composer install --no-dev --no-scripts --optimize-autoloader

# ===== 构建阶段2：前端资源构建 =====
FROM node:18-alpine AS frontend

WORKDIR /src

# 复制前端配置文件
COPY package.json  ./

# 安装依赖
RUN yarn install --frozen-lockfile

# 复制前端源代码
COPY public ./public
COPY resources ./resources
COPY jsconfig.json postcss.config.js tailwind.config.js vite.config.mjs ./

# 构建前端资源
RUN yarn build

# ===== 运行阶段：LiteSQL优化版本 =====
FROM richarvey/nginx-php-fpm:8.2-alpine

# 标签信息
LABEL maintainer="https://github.com/aspnmy"
LABEL version="lite-202509-optimized"
LABEL description="Soketi UI with LiteSQL (SQLite) optimization"

# 设置工作目录
WORKDIR /var/www/html

# 配置Nginx站点
COPY nginx.conf /var/www/html/conf/nginx/nginx-site.conf

# 安装最小化的系统依赖并配置PHP
RUN apk update && apk add --no-cache \
    php82-sqlite3 \
    php82-pdo_sqlite \
    php82-mbstring \
    php82-exif \
    php82-pcntl \
    php82-bcmath \
    php82-gd \
    && rm -rf /var/cache/apk/* \
    && echo "[PHP]" >> /etc/php82/php.ini \
    && echo "memory_limit = 256M" >> /etc/php82/php.ini \
    && echo "max_execution_time = 60" >> /etc/php82/php.ini \
    && echo "post_max_size = 20M" >> /etc/php82/php.ini \
    && echo "upload_max_filesize = 20M" >> /etc/php82/php.ini

# 复制应用文件（先复制必要的配置文件）
COPY database/litesql_init.sql ./database/
COPY scripts/init_litesql.sh ./scripts/
COPY start.sh ./

# 复制构建阶段的文件
COPY --from=composer /src/vendor ./vendor
COPY --from=frontend /src/public/build ./public/build

# 创建SQLite数据库目录并设置权限
RUN mkdir -p /var/www/html/database \
    && chown -R 1000:1000 /var/www/html \
    && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache \
    && chmod +x /var/www/html/scripts/init_litesql.sh \
    && chmod +x /var/www/html/start.sh

# 设置环境变量默认值（可被docker-compose覆盖）
ENV APP_ENV=production \
    APP_DEBUG=false \
    DB_CONNECTION=sqlite \
    DB_DATABASE=/var/www/html/database/database.sqlite \
    CACHE_DRIVER=file \
    QUEUE_CONNECTION=sync \
    SESSION_DRIVER=file \
    LITESQL_INIT_SCRIPT=/var/www/html/database/litesql_init.sql

# 暴露端口
EXPOSE 8000

# 容器启动命令
CMD ["/start.sh"]